package com.example.pancakemusicbox.ui.components.player

import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.pancakemusicbox.model.Track

/**
 * 가사 탭 컴포넌트
 */
@Composable
fun LyricsTab(
    track: Track,
    currentPositionMs: Long,
    lyrics: List<Pair<Long, String>>?, // 타임코드(ms)와 가사 쌍
    onGenerateLyricsClick: () -> Unit,
    modifier: Modifier = Modifier
) {
    Box(
        modifier = modifier
            .fillMaxSize()
            .padding(horizontal = 16.dp, vertical = 8.dp),
        contentAlignment = Alignment.Center
    ) {
        if (lyrics.isNullOrEmpty()) {
            // 가사가 없는 경우
            Column(
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Text(
                    text = "이 곡의 가사가 없습니다",
                    style = MaterialTheme.typography.bodyLarge,
                    color = MaterialTheme.colorScheme.onBackground.copy(alpha = 0.7f),
                    textAlign = TextAlign.Center
                )
                
                Spacer(modifier = Modifier.height(16.dp))
                
                Button(
                    onClick = onGenerateLyricsClick
                ) {
                    Text(text = "AI 가사 생성")
                }
                
                Spacer(modifier = Modifier.height(8.dp))
                
                Text(
                    text = "Powered by Whisper AI",
                    style = MaterialTheme.typography.bodySmall,
                    color = MaterialTheme.colorScheme.onBackground.copy(alpha = 0.5f)
                )
            }
        } else {
            // 가사가 있는 경우
            Column(
                modifier = Modifier
                    .fillMaxSize()
                    .verticalScroll(rememberScrollState())
            ) {
                lyrics.forEachIndexed { index, (timestamp, line) ->
                    val isCurrentLine = currentPositionMs in timestamp..(if (index < lyrics.size - 1) lyrics[index + 1].first else Long.MAX_VALUE)
                    
                    Text(
                        text = line,
                        style = MaterialTheme.typography.bodyLarge.copy(
                            fontSize = if (isCurrentLine) 18.sp else 16.sp,
                            fontWeight = if (isCurrentLine) FontWeight.Bold else FontWeight.Normal
                        ),
                        color = if (isCurrentLine) 
                            MaterialTheme.colorScheme.primary 
                        else 
                            MaterialTheme.colorScheme.onBackground.copy(alpha = if (isCurrentLine) 1f else 0.7f),
                        textAlign = TextAlign.Center,
                        modifier = Modifier
                            .fillMaxWidth()
                            .padding(vertical = 8.dp)
                    )
                }
                
                Spacer(modifier = Modifier.height(16.dp))
            }
        }
    }
}
