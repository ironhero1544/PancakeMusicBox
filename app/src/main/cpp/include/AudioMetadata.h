#ifndef PANCAKEMUSICBOX_AUDIOMETADATA_H
#define PANCAKEMUSICBOX_AUDIOMETADATA_H

#include <string>
#include <vector>
#include <map>
#include <memory>
#include <chrono>

namespace pancakemusicbox {

/**
 * 오디오 품질 정보 구조체
 */
struct AudioQuality {
    int bitDepth;        // 비트 뎁스 (16, 24, 32)
    int sampleRate;      // 샘플링 레이트 (44100, 48000, 96000, 192000)
    std::string format;  // 오디오 포맷 (FLAC, WAV, DSD, MQA 등)
    int channels;        // 채널 수 (1: 모노, 2: 스테레오)
    
    // 고해상도 오디오 여부 (24비트 이상 또는 48kHz 이상)
    bool isHighResolution() const {
        return (bitDepth > 16 || sampleRate > 44100);
    }
    
    // 포맷팅된 품질 정보 문자열 반환 (예: "24bit/96kHz | FLAC")
    std::string getFormattedString() const {
        int sampleRateKhz = sampleRate / 1000;
        return std::to_string(bitDepth) + "bit/" + 
               std::to_string(sampleRateKhz) + "kHz | " + 
               format;
    }
};

/**
 * 트랙/곡 정보 구조체
 */
struct TrackMetadata {
    std::string id;              // 고유 ID
    std::string title;           // 곡 제목
    std::string artist;          // 아티스트
    std::string albumTitle;      // 앨범 제목
    std::string albumArtPath;    // 앨범 아트 경로
    long duration;               // 밀리초 단위 재생 시간
    std::string filePath;        // 파일 경로
    AudioQuality audioQuality;   // 오디오 품질 정보
    std::string genre;           // 장르
    int year;                    // 발매 연도
    int trackNumber;             // 트랙 번호
    std::string composer;        // 작곡가
    int playCount;               // 재생 횟수
    long long lastPlayed;        // 마지막 재생 시간 (타임스탬프)
    
    // 기본 생성자
    TrackMetadata() : 
        duration(0), year(0), trackNumber(0), playCount(0), lastPlayed(0) {}
};

/**
 * 앨범 정보 구조체
 */
struct AlbumMetadata {
    std::string id;                      // 고유 ID
    std::string title;                   // 앨범 제목
    std::string artist;                  // 아티스트
    std::string artworkPath;             // 아트워크 경로
    int year;                            // 발매 연도
    std::vector<std::string> trackIds;   // 트랙 ID 목록
    std::string genre;                   // 대표 장르
    
    // 기본 생성자
    AlbumMetadata() : year(0) {}
};

/**
 * 플레이리스트 정보 구조체
 */
struct PlaylistMetadata {
    std::string id;                      // 고유 ID
    std::string name;                    // 플레이리스트 이름
    std::vector<std::string> trackIds;   // 트랙 ID 목록
    long long createdAt;                 // 생성 시간 (타임스탬프)
    bool isAutoGenerated;                // 자동 생성 여부
    
    // 기본 생성자
    PlaylistMetadata() : createdAt(0), isAutoGenerated(false) {}
};

} // namespace pancakemusicbox

#endif // PANCAKEMUSICBOX_AUDIOMETADATA_H
